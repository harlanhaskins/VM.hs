HASM Grammar

reg          ::= r<num>
arg          ::= <loc> | <num>
inst         ::= add | sub | mul | xor | or | and | slr | sll
mov-expr     ::= mov <loc> <arg>
no-args-inst ::= nop | ret
branch-inst  ::= beq | bne | blt | ble | bgt | bge | bltz | bgez | beqz | bnez
inst         ::= <combine-inst> | <branch-inst> | <no-args-inst> | mov | jmp | jr
unary-expr   ::= <inst> <arg>
binary-expr  ::= <unary-expr> <arg>
ternary-expr ::= <binary-expr> <arg>
branch-expr  ::= <branch-inst> <arg> <arg> <num>
combine-expr ::= <combine-inst> <loc> <loc> <arg>
